1、多个对象使用的是同一个Singletion实例，s就是指向这个唯一实例的指针
2、构造函数是private，则该类不能实例化，只能声明指向该类的指针；
    通过getInstance()来获取多个对象共同使用的Singletion的指针，
    表明该类的所有对象共同使用一个Singletion对象
3、
    a、由于无法声明对象，也就不能调用析构函数，所以s无法释放，会造成内存泄漏
    可以使用atexit()来注册在main函数结束后释放s
    b、在形如函数传参等时会调用拷贝构造函数，由于没有自定义拷贝构造函数，默认会直接赋相同值
    在函数结束时，会自动释放对象导致析构函数被调用，而析构函数使用的delete也会调用析构函数，
    从而递归使程序错误
    c、赋值成员函数同理
